// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CharacterDialogFieldExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CharacterDialogFieldExcel GetRootAsCharacterDialogFieldExcel(ByteBuffer _bb) { return GetRootAsCharacterDialogFieldExcel(_bb, new CharacterDialogFieldExcel()); }
  public static CharacterDialogFieldExcel GetRootAsCharacterDialogFieldExcel(ByteBuffer _bb, CharacterDialogFieldExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CharacterDialogFieldExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long GroupId { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int Phase { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TargetIndex { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public SCHALE.Common.FlatData.FieldDialogType DialogType { get { int o = __p.__offset(10); return o != 0 ? (SCHALE.Common.FlatData.FieldDialogType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.FieldDialogType.None; } }
  public long Duration { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string MotionName { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMotionNameBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetMotionNameBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetMotionNameArray() { return __p.__vector_as_array<byte>(14); }
  public bool IsInteractionDialog { get { int o = __p.__offset(16); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public bool HideUI { get { int o = __p.__offset(18); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string LocalizeKR { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeKRBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetLocalizeKRBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetLocalizeKRArray() { return __p.__vector_as_array<byte>(20); }
  public string LocalizeJP { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocalizeJPBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetLocalizeJPBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetLocalizeJPArray() { return __p.__vector_as_array<byte>(22); }

  public static Offset<SCHALE.Common.FlatData.CharacterDialogFieldExcel> CreateCharacterDialogFieldExcel(FlatBufferBuilder builder,
      long GroupId = 0,
      int Phase = 0,
      int TargetIndex = 0,
      SCHALE.Common.FlatData.FieldDialogType DialogType = SCHALE.Common.FlatData.FieldDialogType.None,
      long Duration = 0,
      StringOffset MotionNameOffset = default(StringOffset),
      bool IsInteractionDialog = false,
      bool HideUI = false,
      StringOffset LocalizeKROffset = default(StringOffset),
      StringOffset LocalizeJPOffset = default(StringOffset)) {
    builder.StartTable(10);
    CharacterDialogFieldExcel.AddDuration(builder, Duration);
    CharacterDialogFieldExcel.AddGroupId(builder, GroupId);
    CharacterDialogFieldExcel.AddLocalizeJP(builder, LocalizeJPOffset);
    CharacterDialogFieldExcel.AddLocalizeKR(builder, LocalizeKROffset);
    CharacterDialogFieldExcel.AddMotionName(builder, MotionNameOffset);
    CharacterDialogFieldExcel.AddDialogType(builder, DialogType);
    CharacterDialogFieldExcel.AddTargetIndex(builder, TargetIndex);
    CharacterDialogFieldExcel.AddPhase(builder, Phase);
    CharacterDialogFieldExcel.AddHideUI(builder, HideUI);
    CharacterDialogFieldExcel.AddIsInteractionDialog(builder, IsInteractionDialog);
    return CharacterDialogFieldExcel.EndCharacterDialogFieldExcel(builder);
  }

  public static void StartCharacterDialogFieldExcel(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddGroupId(FlatBufferBuilder builder, long groupId) { builder.AddLong(0, groupId, 0); }
  public static void AddPhase(FlatBufferBuilder builder, int phase) { builder.AddInt(1, phase, 0); }
  public static void AddTargetIndex(FlatBufferBuilder builder, int targetIndex) { builder.AddInt(2, targetIndex, 0); }
  public static void AddDialogType(FlatBufferBuilder builder, SCHALE.Common.FlatData.FieldDialogType dialogType) { builder.AddInt(3, (int)dialogType, 0); }
  public static void AddDuration(FlatBufferBuilder builder, long duration) { builder.AddLong(4, duration, 0); }
  public static void AddMotionName(FlatBufferBuilder builder, StringOffset motionNameOffset) { builder.AddOffset(5, motionNameOffset.Value, 0); }
  public static void AddIsInteractionDialog(FlatBufferBuilder builder, bool isInteractionDialog) { builder.AddBool(6, isInteractionDialog, false); }
  public static void AddHideUI(FlatBufferBuilder builder, bool hideUI) { builder.AddBool(7, hideUI, false); }
  public static void AddLocalizeKR(FlatBufferBuilder builder, StringOffset localizeKROffset) { builder.AddOffset(8, localizeKROffset.Value, 0); }
  public static void AddLocalizeJP(FlatBufferBuilder builder, StringOffset localizeJPOffset) { builder.AddOffset(9, localizeJPOffset.Value, 0); }
  public static Offset<SCHALE.Common.FlatData.CharacterDialogFieldExcel> EndCharacterDialogFieldExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.CharacterDialogFieldExcel>(o);
  }
}


static public class CharacterDialogFieldExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*GroupId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*Phase*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*TargetIndex*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*DialogType*/, 4 /*SCHALE.Common.FlatData.FieldDialogType*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*Duration*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 14 /*MotionName*/, false)
      && verifier.VerifyField(tablePos, 16 /*IsInteractionDialog*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*HideUI*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 20 /*LocalizeKR*/, false)
      && verifier.VerifyString(tablePos, 22 /*LocalizeJP*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
