// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SCHALE.Common.FlatData
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ConstCommonExcel : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ConstCommonExcel GetRootAsConstCommonExcel(ByteBuffer _bb) { return GetRootAsConstCommonExcel(_bb, new ConstCommonExcel()); }
  public static ConstCommonExcel GetRootAsConstCommonExcel(ByteBuffer _bb, ConstCommonExcel obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ConstCommonExcel __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int CampaignMainStageMaxRank { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CampaignMainStageBestRecord { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HardAdventurePlayCountRecoverDailyNumber { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int HardStageCount { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TacticRankClearTime { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long BaseTimeScale { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int GachaPercentage { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long AcademyFavorZoneId { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int CafePresetSlotCount { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long CafeMonologueIntervalMillisec { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CafeMonologueDefaultDuration { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CafeBubbleIdleDurationMilliSec { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int FindGiftTimeLimit { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CafeAutoChargePeriodInMsc { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CafeProductionDecimalPosition { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CafeSetGroupApplyCount { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int WeekDungeonFindGiftRewardLimitCount { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int StageFailedCurrencyRefundRate { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EnterDeposit { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AccountMaxLevel { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MainSquadExpBonus { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int SupportSquadExpBonus { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AccountExpRatio { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MissionToastLifeTime { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExpItemInsertLimit { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExpItemInsertAccelTime { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CharacterLvUpCoefficient { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EquipmentLvUpCoefficient { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExpEquipInsertLimit { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EquipLvUpCoefficient { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int NicknameLength { get { int o = __p.__offset(64); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CraftDuration(int j) { int o = __p.__offset(66); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int CraftDurationLength { get { int o = __p.__offset(66); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetCraftDurationBytes() { return __p.__vector_as_span<int>(66, 4); }
#else
  public ArraySegment<byte>? GetCraftDurationBytes() { return __p.__vector_as_arraysegment(66); }
#endif
  public int[] GetCraftDurationArray() { return __p.__vector_as_array<int>(66); }
  public int CraftLimitTime { get { int o = __p.__offset(68); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShiftingCraftDuration(int j) { int o = __p.__offset(70); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int ShiftingCraftDurationLength { get { int o = __p.__offset(70); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetShiftingCraftDurationBytes() { return __p.__vector_as_span<int>(70, 4); }
#else
  public ArraySegment<byte>? GetShiftingCraftDurationBytes() { return __p.__vector_as_arraysegment(70); }
#endif
  public int[] GetShiftingCraftDurationArray() { return __p.__vector_as_array<int>(70); }
  public int ShiftingCraftTicketConsumeAmount { get { int o = __p.__offset(72); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShiftingCraftSlotMaxCapacity { get { int o = __p.__offset(74); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CraftTicketItemUniqueId { get { int o = __p.__offset(76); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CraftTicketConsumeAmount { get { int o = __p.__offset(78); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public SCHALE.Common.FlatData.ParcelType AcademyEnterCostType { get { int o = __p.__offset(80); return o != 0 ? (SCHALE.Common.FlatData.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ParcelType.None; } }
  public long AcademyEnterCostId { get { int o = __p.__offset(82); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int AcademyTicketCost { get { int o = __p.__offset(84); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MassangerMessageExpireDay { get { int o = __p.__offset(86); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CraftLeafNodeGenerateLv1Count { get { int o = __p.__offset(88); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CraftLeafNodeGenerateLv2Count { get { int o = __p.__offset(90); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TutorialGachaShopId { get { int o = __p.__offset(92); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BeforehandGachaShopId { get { int o = __p.__offset(94); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int TutorialGachaGoodsId { get { int o = __p.__offset(96); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int EquipmentSlotOpenLevel(int j) { int o = __p.__offset(98); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int EquipmentSlotOpenLevelLength { get { int o = __p.__offset(98); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetEquipmentSlotOpenLevelBytes() { return __p.__vector_as_span<int>(98, 4); }
#else
  public ArraySegment<byte>? GetEquipmentSlotOpenLevelBytes() { return __p.__vector_as_arraysegment(98); }
#endif
  public int[] GetEquipmentSlotOpenLevelArray() { return __p.__vector_as_array<int>(98); }
  public float ScenarioAutoDelayMillisec { get { int o = __p.__offset(100); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public long JoinOrCreateClanCoolTimeFromHour { get { int o = __p.__offset(102); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ClanMaxMember { get { int o = __p.__offset(104); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ClanSearchResultCount { get { int o = __p.__offset(106); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ClanMaxApplicant { get { int o = __p.__offset(108); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ClanRejoinCoolTimeFromSecond { get { int o = __p.__offset(110); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int ClanWordBalloonMaxCharacter { get { int o = __p.__offset(112); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long CallNameRenameCoolTimeFromHour { get { int o = __p.__offset(114); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CallNameMinimumLength { get { int o = __p.__offset(116); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CallNameMaximumLength { get { int o = __p.__offset(118); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long LobbyToScreenModeWaitTime { get { int o = __p.__offset(120); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ScreenshotToLobbyButtonHideDelay { get { int o = __p.__offset(122); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long PrologueScenarioID01 { get { int o = __p.__offset(124); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long PrologueScenarioID02 { get { int o = __p.__offset(126); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long TutorialHardStage11 { get { int o = __p.__offset(128); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long TutorialSpeedButtonStage { get { int o = __p.__offset(130); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long TutorialCharacterDefaultCount { get { int o = __p.__offset(132); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public SCHALE.Common.FlatData.ShopCategoryType TutorialShopCategoryType { get { int o = __p.__offset(134); return o != 0 ? (SCHALE.Common.FlatData.ShopCategoryType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ShopCategoryType.General; } }
  public long AdventureStrategyPlayTimeLimitInSeconds { get { int o = __p.__offset(136); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long WeekDungoenTacticPlayTimeLimitInSeconds { get { int o = __p.__offset(138); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long RaidTacticPlayTimeLimitInSeconds { get { int o = __p.__offset(140); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long RaidOpponentListAmount { get { int o = __p.__offset(142); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CraftBaseGoldRequired(int j) { int o = __p.__offset(144); return o != 0 ? __p.bb.GetLong(__p.__vector(o) + j * 8) : (long)0; }
  public int CraftBaseGoldRequiredLength { get { int o = __p.__offset(144); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<long> GetCraftBaseGoldRequiredBytes() { return __p.__vector_as_span<long>(144, 8); }
#else
  public ArraySegment<byte>? GetCraftBaseGoldRequiredBytes() { return __p.__vector_as_arraysegment(144); }
#endif
  public long[] GetCraftBaseGoldRequiredArray() { return __p.__vector_as_array<long>(144); }
  public int PostExpiredDayAttendance { get { int o = __p.__offset(146); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PostExpiredDayInventoryOverflow { get { int o = __p.__offset(148); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PostExpiredDayGameManager { get { int o = __p.__offset(150); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string UILabelCharacterWrap { get { int o = __p.__offset(152); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUILabelCharacterWrapBytes() { return __p.__vector_as_span<byte>(152, 1); }
#else
  public ArraySegment<byte>? GetUILabelCharacterWrapBytes() { return __p.__vector_as_arraysegment(152); }
#endif
  public byte[] GetUILabelCharacterWrapArray() { return __p.__vector_as_array<byte>(152); }
  public float RequestTimeOut { get { int o = __p.__offset(154); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public int MailStorageSoftCap { get { int o = __p.__offset(156); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MailStorageHardCap { get { int o = __p.__offset(158); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeckStorageSize { get { int o = __p.__offset(160); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeckNoStarViewCount { get { int o = __p.__offset(162); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeck1StarViewCount { get { int o = __p.__offset(164); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeck2StarViewCount { get { int o = __p.__offset(166); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeck3StarViewCount { get { int o = __p.__offset(168); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExSkillLevelMax { get { int o = __p.__offset(170); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PublicSkillLevelMax { get { int o = __p.__offset(172); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PassiveSkillLevelMax { get { int o = __p.__offset(174); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ExtraPassiveSkillLevelMax { get { int o = __p.__offset(176); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int AccountCommentMaxLength { get { int o = __p.__offset(178); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool ShowFurnitureTag { get { int o = __p.__offset(180); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int CafeSummonCoolTimeFromHour { get { int o = __p.__offset(182); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long LimitedStageDailyClearCount { get { int o = __p.__offset(184); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long LimitedStageEntryTimeLimit { get { int o = __p.__offset(186); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long LimitedStageEntryTimeBuffer { get { int o = __p.__offset(188); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long LimitedStagePointAmount { get { int o = __p.__offset(190); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long LimitedStagePointPerApMin { get { int o = __p.__offset(192); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long LimitedStagePointPerApMax { get { int o = __p.__offset(194); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int AccountLinkReward { get { int o = __p.__offset(196); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MonthlyProductCheckDays { get { int o = __p.__offset(198); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int WeaponLvUpCoefficient { get { int o = __p.__offset(200); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ShowRaidMyListCount { get { int o = __p.__offset(202); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxLevelExpMasterCoinRatio { get { int o = __p.__offset(204); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public SCHALE.Common.FlatData.ParcelType RaidEnterCostType { get { int o = __p.__offset(206); return o != 0 ? (SCHALE.Common.FlatData.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ParcelType.None; } }
  public long RaidEnterCostId { get { int o = __p.__offset(208); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long RaidTicketCost { get { int o = __p.__offset(210); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string TimeAttackDungeonScenarioId { get { int o = __p.__offset(212); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTimeAttackDungeonScenarioIdBytes() { return __p.__vector_as_span<byte>(212, 1); }
#else
  public ArraySegment<byte>? GetTimeAttackDungeonScenarioIdBytes() { return __p.__vector_as_arraysegment(212); }
#endif
  public byte[] GetTimeAttackDungeonScenarioIdArray() { return __p.__vector_as_array<byte>(212); }
  public int TimeAttackDungoenPlayCountPerTicket { get { int o = __p.__offset(214); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public SCHALE.Common.FlatData.ParcelType TimeAttackDungeonEnterCostType { get { int o = __p.__offset(216); return o != 0 ? (SCHALE.Common.FlatData.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ParcelType.None; } }
  public long TimeAttackDungeonEnterCostId { get { int o = __p.__offset(218); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long TimeAttackDungeonEnterCost { get { int o = __p.__offset(220); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long ClanLeaderTransferLastLoginLimit { get { int o = __p.__offset(222); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int MonthlyProductRepurchasePopupLimit { get { int o = __p.__offset(224); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public SCHALE.Common.FlatData.Tag CommonFavorItemTags(int j) { int o = __p.__offset(226); return o != 0 ? (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(__p.__vector(o) + j * 4) : (SCHALE.Common.FlatData.Tag)0; }
  public int CommonFavorItemTagsLength { get { int o = __p.__offset(226); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<SCHALE.Common.FlatData.Tag> GetCommonFavorItemTagsBytes() { return __p.__vector_as_span<SCHALE.Common.FlatData.Tag>(226, 4); }
#else
  public ArraySegment<byte>? GetCommonFavorItemTagsBytes() { return __p.__vector_as_arraysegment(226); }
#endif
  public SCHALE.Common.FlatData.Tag[] GetCommonFavorItemTagsArray() { int o = __p.__offset(226); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); SCHALE.Common.FlatData.Tag[] a = new SCHALE.Common.FlatData.Tag[l]; for (int i = 0; i < l; i++) { a[i] = (SCHALE.Common.FlatData.Tag)__p.bb.GetInt(p + i * 4); } return a; }
  public long MaxApMasterCoinPerWeek { get { int o = __p.__offset(228); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CraftOpenExpTier1 { get { int o = __p.__offset(230); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CraftOpenExpTier2 { get { int o = __p.__offset(232); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CraftOpenExpTier3 { get { int o = __p.__offset(234); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long CharacterEquipmentGearSlot { get { int o = __p.__offset(236); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int BirthDayDDay { get { int o = __p.__offset(238); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RecommendedFriendsLvDifferenceLimit { get { int o = __p.__offset(240); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DDosDetectCount { get { int o = __p.__offset(242); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int DDosCheckIntervalInSeconds { get { int o = __p.__offset(244); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxFriendsCount { get { int o = __p.__offset(246); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int MaxFriendsRequest { get { int o = __p.__offset(248); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FriendsSearchRequestCount { get { int o = __p.__offset(250); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FriendsMaxApplicant { get { int o = __p.__offset(252); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long IdCardDefaultCharacterId { get { int o = __p.__offset(254); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long IdCardDefaultBgId { get { int o = __p.__offset(256); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long WorldRaidGemEnterCost { get { int o = __p.__offset(258); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long WorldRaidGemEnterAmout { get { int o = __p.__offset(260); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public long FriendIdCardCommentMaxLength { get { int o = __p.__offset(262); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int FormationPresetNumberOfEchelonTab { get { int o = __p.__offset(264); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FormationPresetNumberOfEchelon { get { int o = __p.__offset(266); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FormationPresetRecentNumberOfEchelon { get { int o = __p.__offset(268); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FormationPresetEchelonTabTextLength { get { int o = __p.__offset(270); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int FormationPresetEchelonSlotTextLength { get { int o = __p.__offset(272); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CharProfileRowIntervalKr { get { int o = __p.__offset(274); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CharProfileRowIntervalJp { get { int o = __p.__offset(276); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CharProfilePopupRowIntervalKr { get { int o = __p.__offset(278); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CharProfilePopupRowIntervalJp { get { int o = __p.__offset(280); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BeforehandGachaCount { get { int o = __p.__offset(282); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int BeforehandGachaGroupId { get { int o = __p.__offset(284); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int RenewalDisplayOrderDay { get { int o = __p.__offset(286); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public long EmblemDefaultId { get { int o = __p.__offset(288); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public string BirthdayMailStartDate { get { int o = __p.__offset(290); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBirthdayMailStartDateBytes() { return __p.__vector_as_span<byte>(290, 1); }
#else
  public ArraySegment<byte>? GetBirthdayMailStartDateBytes() { return __p.__vector_as_arraysegment(290); }
#endif
  public byte[] GetBirthdayMailStartDateArray() { return __p.__vector_as_array<byte>(290); }
  public int BirthdayMailRemainDate { get { int o = __p.__offset(292); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public SCHALE.Common.FlatData.ParcelType BirthdayMailParcelType { get { int o = __p.__offset(294); return o != 0 ? (SCHALE.Common.FlatData.ParcelType)__p.bb.GetInt(o + __p.bb_pos) : SCHALE.Common.FlatData.ParcelType.None; } }
  public long BirthdayMailParcelId { get { int o = __p.__offset(296); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  public int BirthdayMailParcelAmount { get { int o = __p.__offset(298); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeckAverageDeckCount { get { int o = __p.__offset(300); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeckWorldRaidSaveConditionCoefficient { get { int o = __p.__offset(302); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int ClearDeckShowCount { get { int o = __p.__offset(304); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int CharacterMaxLevel { get { int o = __p.__offset(306); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PotentialBonusStatMaxLevelMaxHP { get { int o = __p.__offset(308); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PotentialBonusStatMaxLevelAttackPower { get { int o = __p.__offset(310); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PotentialBonusStatMaxLevelHealPower { get { int o = __p.__offset(312); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int PotentialOpenConditionCharacterLevel { get { int o = __p.__offset(314); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static void StartConstCommonExcel(FlatBufferBuilder builder) { builder.StartTable(156); }
  public static void AddCampaignMainStageMaxRank(FlatBufferBuilder builder, int campaignMainStageMaxRank) { builder.AddInt(0, campaignMainStageMaxRank, 0); }
  public static void AddCampaignMainStageBestRecord(FlatBufferBuilder builder, int campaignMainStageBestRecord) { builder.AddInt(1, campaignMainStageBestRecord, 0); }
  public static void AddHardAdventurePlayCountRecoverDailyNumber(FlatBufferBuilder builder, int hardAdventurePlayCountRecoverDailyNumber) { builder.AddInt(2, hardAdventurePlayCountRecoverDailyNumber, 0); }
  public static void AddHardStageCount(FlatBufferBuilder builder, int hardStageCount) { builder.AddInt(3, hardStageCount, 0); }
  public static void AddTacticRankClearTime(FlatBufferBuilder builder, int tacticRankClearTime) { builder.AddInt(4, tacticRankClearTime, 0); }
  public static void AddBaseTimeScale(FlatBufferBuilder builder, long baseTimeScale) { builder.AddLong(5, baseTimeScale, 0); }
  public static void AddGachaPercentage(FlatBufferBuilder builder, int gachaPercentage) { builder.AddInt(6, gachaPercentage, 0); }
  public static void AddAcademyFavorZoneId(FlatBufferBuilder builder, long academyFavorZoneId) { builder.AddLong(7, academyFavorZoneId, 0); }
  public static void AddCafePresetSlotCount(FlatBufferBuilder builder, int cafePresetSlotCount) { builder.AddInt(8, cafePresetSlotCount, 0); }
  public static void AddCafeMonologueIntervalMillisec(FlatBufferBuilder builder, long cafeMonologueIntervalMillisec) { builder.AddLong(9, cafeMonologueIntervalMillisec, 0); }
  public static void AddCafeMonologueDefaultDuration(FlatBufferBuilder builder, long cafeMonologueDefaultDuration) { builder.AddLong(10, cafeMonologueDefaultDuration, 0); }
  public static void AddCafeBubbleIdleDurationMilliSec(FlatBufferBuilder builder, long cafeBubbleIdleDurationMilliSec) { builder.AddLong(11, cafeBubbleIdleDurationMilliSec, 0); }
  public static void AddFindGiftTimeLimit(FlatBufferBuilder builder, int findGiftTimeLimit) { builder.AddInt(12, findGiftTimeLimit, 0); }
  public static void AddCafeAutoChargePeriodInMsc(FlatBufferBuilder builder, int cafeAutoChargePeriodInMsc) { builder.AddInt(13, cafeAutoChargePeriodInMsc, 0); }
  public static void AddCafeProductionDecimalPosition(FlatBufferBuilder builder, int cafeProductionDecimalPosition) { builder.AddInt(14, cafeProductionDecimalPosition, 0); }
  public static void AddCafeSetGroupApplyCount(FlatBufferBuilder builder, int cafeSetGroupApplyCount) { builder.AddInt(15, cafeSetGroupApplyCount, 0); }
  public static void AddWeekDungeonFindGiftRewardLimitCount(FlatBufferBuilder builder, int weekDungeonFindGiftRewardLimitCount) { builder.AddInt(16, weekDungeonFindGiftRewardLimitCount, 0); }
  public static void AddStageFailedCurrencyRefundRate(FlatBufferBuilder builder, int stageFailedCurrencyRefundRate) { builder.AddInt(17, stageFailedCurrencyRefundRate, 0); }
  public static void AddEnterDeposit(FlatBufferBuilder builder, int enterDeposit) { builder.AddInt(18, enterDeposit, 0); }
  public static void AddAccountMaxLevel(FlatBufferBuilder builder, int accountMaxLevel) { builder.AddInt(19, accountMaxLevel, 0); }
  public static void AddMainSquadExpBonus(FlatBufferBuilder builder, int mainSquadExpBonus) { builder.AddInt(20, mainSquadExpBonus, 0); }
  public static void AddSupportSquadExpBonus(FlatBufferBuilder builder, int supportSquadExpBonus) { builder.AddInt(21, supportSquadExpBonus, 0); }
  public static void AddAccountExpRatio(FlatBufferBuilder builder, int accountExpRatio) { builder.AddInt(22, accountExpRatio, 0); }
  public static void AddMissionToastLifeTime(FlatBufferBuilder builder, int missionToastLifeTime) { builder.AddInt(23, missionToastLifeTime, 0); }
  public static void AddExpItemInsertLimit(FlatBufferBuilder builder, int expItemInsertLimit) { builder.AddInt(24, expItemInsertLimit, 0); }
  public static void AddExpItemInsertAccelTime(FlatBufferBuilder builder, int expItemInsertAccelTime) { builder.AddInt(25, expItemInsertAccelTime, 0); }
  public static void AddCharacterLvUpCoefficient(FlatBufferBuilder builder, int characterLvUpCoefficient) { builder.AddInt(26, characterLvUpCoefficient, 0); }
  public static void AddEquipmentLvUpCoefficient(FlatBufferBuilder builder, int equipmentLvUpCoefficient) { builder.AddInt(27, equipmentLvUpCoefficient, 0); }
  public static void AddExpEquipInsertLimit(FlatBufferBuilder builder, int expEquipInsertLimit) { builder.AddInt(28, expEquipInsertLimit, 0); }
  public static void AddEquipLvUpCoefficient(FlatBufferBuilder builder, int equipLvUpCoefficient) { builder.AddInt(29, equipLvUpCoefficient, 0); }
  public static void AddNicknameLength(FlatBufferBuilder builder, int nicknameLength) { builder.AddInt(30, nicknameLength, 0); }
  public static void AddCraftDuration(FlatBufferBuilder builder, VectorOffset craftDurationOffset) { builder.AddOffset(31, craftDurationOffset.Value, 0); }
  public static VectorOffset CreateCraftDurationVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateCraftDurationVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCraftDurationVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCraftDurationVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCraftDurationVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCraftLimitTime(FlatBufferBuilder builder, int craftLimitTime) { builder.AddInt(32, craftLimitTime, 0); }
  public static void AddShiftingCraftDuration(FlatBufferBuilder builder, VectorOffset shiftingCraftDurationOffset) { builder.AddOffset(33, shiftingCraftDurationOffset.Value, 0); }
  public static VectorOffset CreateShiftingCraftDurationVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateShiftingCraftDurationVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShiftingCraftDurationVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateShiftingCraftDurationVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartShiftingCraftDurationVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddShiftingCraftTicketConsumeAmount(FlatBufferBuilder builder, int shiftingCraftTicketConsumeAmount) { builder.AddInt(34, shiftingCraftTicketConsumeAmount, 0); }
  public static void AddShiftingCraftSlotMaxCapacity(FlatBufferBuilder builder, int shiftingCraftSlotMaxCapacity) { builder.AddInt(35, shiftingCraftSlotMaxCapacity, 0); }
  public static void AddCraftTicketItemUniqueId(FlatBufferBuilder builder, int craftTicketItemUniqueId) { builder.AddInt(36, craftTicketItemUniqueId, 0); }
  public static void AddCraftTicketConsumeAmount(FlatBufferBuilder builder, int craftTicketConsumeAmount) { builder.AddInt(37, craftTicketConsumeAmount, 0); }
  public static void AddAcademyEnterCostType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ParcelType academyEnterCostType) { builder.AddInt(38, (int)academyEnterCostType, 0); }
  public static void AddAcademyEnterCostId(FlatBufferBuilder builder, long academyEnterCostId) { builder.AddLong(39, academyEnterCostId, 0); }
  public static void AddAcademyTicketCost(FlatBufferBuilder builder, int academyTicketCost) { builder.AddInt(40, academyTicketCost, 0); }
  public static void AddMassangerMessageExpireDay(FlatBufferBuilder builder, int massangerMessageExpireDay) { builder.AddInt(41, massangerMessageExpireDay, 0); }
  public static void AddCraftLeafNodeGenerateLv1Count(FlatBufferBuilder builder, int craftLeafNodeGenerateLv1Count) { builder.AddInt(42, craftLeafNodeGenerateLv1Count, 0); }
  public static void AddCraftLeafNodeGenerateLv2Count(FlatBufferBuilder builder, int craftLeafNodeGenerateLv2Count) { builder.AddInt(43, craftLeafNodeGenerateLv2Count, 0); }
  public static void AddTutorialGachaShopId(FlatBufferBuilder builder, int tutorialGachaShopId) { builder.AddInt(44, tutorialGachaShopId, 0); }
  public static void AddBeforehandGachaShopId(FlatBufferBuilder builder, int beforehandGachaShopId) { builder.AddInt(45, beforehandGachaShopId, 0); }
  public static void AddTutorialGachaGoodsId(FlatBufferBuilder builder, int tutorialGachaGoodsId) { builder.AddInt(46, tutorialGachaGoodsId, 0); }
  public static void AddEquipmentSlotOpenLevel(FlatBufferBuilder builder, VectorOffset equipmentSlotOpenLevelOffset) { builder.AddOffset(47, equipmentSlotOpenLevelOffset.Value, 0); }
  public static VectorOffset CreateEquipmentSlotOpenLevelVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateEquipmentSlotOpenLevelVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEquipmentSlotOpenLevelVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEquipmentSlotOpenLevelVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEquipmentSlotOpenLevelVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddScenarioAutoDelayMillisec(FlatBufferBuilder builder, float scenarioAutoDelayMillisec) { builder.AddFloat(48, scenarioAutoDelayMillisec, 0.0f); }
  public static void AddJoinOrCreateClanCoolTimeFromHour(FlatBufferBuilder builder, long joinOrCreateClanCoolTimeFromHour) { builder.AddLong(49, joinOrCreateClanCoolTimeFromHour, 0); }
  public static void AddClanMaxMember(FlatBufferBuilder builder, long clanMaxMember) { builder.AddLong(50, clanMaxMember, 0); }
  public static void AddClanSearchResultCount(FlatBufferBuilder builder, long clanSearchResultCount) { builder.AddLong(51, clanSearchResultCount, 0); }
  public static void AddClanMaxApplicant(FlatBufferBuilder builder, long clanMaxApplicant) { builder.AddLong(52, clanMaxApplicant, 0); }
  public static void AddClanRejoinCoolTimeFromSecond(FlatBufferBuilder builder, long clanRejoinCoolTimeFromSecond) { builder.AddLong(53, clanRejoinCoolTimeFromSecond, 0); }
  public static void AddClanWordBalloonMaxCharacter(FlatBufferBuilder builder, int clanWordBalloonMaxCharacter) { builder.AddInt(54, clanWordBalloonMaxCharacter, 0); }
  public static void AddCallNameRenameCoolTimeFromHour(FlatBufferBuilder builder, long callNameRenameCoolTimeFromHour) { builder.AddLong(55, callNameRenameCoolTimeFromHour, 0); }
  public static void AddCallNameMinimumLength(FlatBufferBuilder builder, long callNameMinimumLength) { builder.AddLong(56, callNameMinimumLength, 0); }
  public static void AddCallNameMaximumLength(FlatBufferBuilder builder, long callNameMaximumLength) { builder.AddLong(57, callNameMaximumLength, 0); }
  public static void AddLobbyToScreenModeWaitTime(FlatBufferBuilder builder, long lobbyToScreenModeWaitTime) { builder.AddLong(58, lobbyToScreenModeWaitTime, 0); }
  public static void AddScreenshotToLobbyButtonHideDelay(FlatBufferBuilder builder, long screenshotToLobbyButtonHideDelay) { builder.AddLong(59, screenshotToLobbyButtonHideDelay, 0); }
  public static void AddPrologueScenarioID01(FlatBufferBuilder builder, long prologueScenarioID01) { builder.AddLong(60, prologueScenarioID01, 0); }
  public static void AddPrologueScenarioID02(FlatBufferBuilder builder, long prologueScenarioID02) { builder.AddLong(61, prologueScenarioID02, 0); }
  public static void AddTutorialHardStage11(FlatBufferBuilder builder, long tutorialHardStage11) { builder.AddLong(62, tutorialHardStage11, 0); }
  public static void AddTutorialSpeedButtonStage(FlatBufferBuilder builder, long tutorialSpeedButtonStage) { builder.AddLong(63, tutorialSpeedButtonStage, 0); }
  public static void AddTutorialCharacterDefaultCount(FlatBufferBuilder builder, long tutorialCharacterDefaultCount) { builder.AddLong(64, tutorialCharacterDefaultCount, 0); }
  public static void AddTutorialShopCategoryType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ShopCategoryType tutorialShopCategoryType) { builder.AddInt(65, (int)tutorialShopCategoryType, 0); }
  public static void AddAdventureStrategyPlayTimeLimitInSeconds(FlatBufferBuilder builder, long adventureStrategyPlayTimeLimitInSeconds) { builder.AddLong(66, adventureStrategyPlayTimeLimitInSeconds, 0); }
  public static void AddWeekDungoenTacticPlayTimeLimitInSeconds(FlatBufferBuilder builder, long weekDungoenTacticPlayTimeLimitInSeconds) { builder.AddLong(67, weekDungoenTacticPlayTimeLimitInSeconds, 0); }
  public static void AddRaidTacticPlayTimeLimitInSeconds(FlatBufferBuilder builder, long raidTacticPlayTimeLimitInSeconds) { builder.AddLong(68, raidTacticPlayTimeLimitInSeconds, 0); }
  public static void AddRaidOpponentListAmount(FlatBufferBuilder builder, long raidOpponentListAmount) { builder.AddLong(69, raidOpponentListAmount, 0); }
  public static void AddCraftBaseGoldRequired(FlatBufferBuilder builder, VectorOffset craftBaseGoldRequiredOffset) { builder.AddOffset(70, craftBaseGoldRequiredOffset.Value, 0); }
  public static VectorOffset CreateCraftBaseGoldRequiredVector(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateCraftBaseGoldRequiredVectorBlock(FlatBufferBuilder builder, long[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCraftBaseGoldRequiredVectorBlock(FlatBufferBuilder builder, ArraySegment<long> data) { builder.StartVector(8, data.Count, 8); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCraftBaseGoldRequiredVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<long>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCraftBaseGoldRequiredVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static void AddPostExpiredDayAttendance(FlatBufferBuilder builder, int postExpiredDayAttendance) { builder.AddInt(71, postExpiredDayAttendance, 0); }
  public static void AddPostExpiredDayInventoryOverflow(FlatBufferBuilder builder, int postExpiredDayInventoryOverflow) { builder.AddInt(72, postExpiredDayInventoryOverflow, 0); }
  public static void AddPostExpiredDayGameManager(FlatBufferBuilder builder, int postExpiredDayGameManager) { builder.AddInt(73, postExpiredDayGameManager, 0); }
  public static void AddUILabelCharacterWrap(FlatBufferBuilder builder, StringOffset uILabelCharacterWrapOffset) { builder.AddOffset(74, uILabelCharacterWrapOffset.Value, 0); }
  public static void AddRequestTimeOut(FlatBufferBuilder builder, float requestTimeOut) { builder.AddFloat(75, requestTimeOut, 0.0f); }
  public static void AddMailStorageSoftCap(FlatBufferBuilder builder, int mailStorageSoftCap) { builder.AddInt(76, mailStorageSoftCap, 0); }
  public static void AddMailStorageHardCap(FlatBufferBuilder builder, int mailStorageHardCap) { builder.AddInt(77, mailStorageHardCap, 0); }
  public static void AddClearDeckStorageSize(FlatBufferBuilder builder, int clearDeckStorageSize) { builder.AddInt(78, clearDeckStorageSize, 0); }
  public static void AddClearDeckNoStarViewCount(FlatBufferBuilder builder, int clearDeckNoStarViewCount) { builder.AddInt(79, clearDeckNoStarViewCount, 0); }
  public static void AddClearDeck1StarViewCount(FlatBufferBuilder builder, int clearDeck1StarViewCount) { builder.AddInt(80, clearDeck1StarViewCount, 0); }
  public static void AddClearDeck2StarViewCount(FlatBufferBuilder builder, int clearDeck2StarViewCount) { builder.AddInt(81, clearDeck2StarViewCount, 0); }
  public static void AddClearDeck3StarViewCount(FlatBufferBuilder builder, int clearDeck3StarViewCount) { builder.AddInt(82, clearDeck3StarViewCount, 0); }
  public static void AddExSkillLevelMax(FlatBufferBuilder builder, int exSkillLevelMax) { builder.AddInt(83, exSkillLevelMax, 0); }
  public static void AddPublicSkillLevelMax(FlatBufferBuilder builder, int publicSkillLevelMax) { builder.AddInt(84, publicSkillLevelMax, 0); }
  public static void AddPassiveSkillLevelMax(FlatBufferBuilder builder, int passiveSkillLevelMax) { builder.AddInt(85, passiveSkillLevelMax, 0); }
  public static void AddExtraPassiveSkillLevelMax(FlatBufferBuilder builder, int extraPassiveSkillLevelMax) { builder.AddInt(86, extraPassiveSkillLevelMax, 0); }
  public static void AddAccountCommentMaxLength(FlatBufferBuilder builder, int accountCommentMaxLength) { builder.AddInt(87, accountCommentMaxLength, 0); }
  public static void AddShowFurnitureTag(FlatBufferBuilder builder, bool showFurnitureTag) { builder.AddBool(88, showFurnitureTag, false); }
  public static void AddCafeSummonCoolTimeFromHour(FlatBufferBuilder builder, int cafeSummonCoolTimeFromHour) { builder.AddInt(89, cafeSummonCoolTimeFromHour, 0); }
  public static void AddLimitedStageDailyClearCount(FlatBufferBuilder builder, long limitedStageDailyClearCount) { builder.AddLong(90, limitedStageDailyClearCount, 0); }
  public static void AddLimitedStageEntryTimeLimit(FlatBufferBuilder builder, long limitedStageEntryTimeLimit) { builder.AddLong(91, limitedStageEntryTimeLimit, 0); }
  public static void AddLimitedStageEntryTimeBuffer(FlatBufferBuilder builder, long limitedStageEntryTimeBuffer) { builder.AddLong(92, limitedStageEntryTimeBuffer, 0); }
  public static void AddLimitedStagePointAmount(FlatBufferBuilder builder, long limitedStagePointAmount) { builder.AddLong(93, limitedStagePointAmount, 0); }
  public static void AddLimitedStagePointPerApMin(FlatBufferBuilder builder, long limitedStagePointPerApMin) { builder.AddLong(94, limitedStagePointPerApMin, 0); }
  public static void AddLimitedStagePointPerApMax(FlatBufferBuilder builder, long limitedStagePointPerApMax) { builder.AddLong(95, limitedStagePointPerApMax, 0); }
  public static void AddAccountLinkReward(FlatBufferBuilder builder, int accountLinkReward) { builder.AddInt(96, accountLinkReward, 0); }
  public static void AddMonthlyProductCheckDays(FlatBufferBuilder builder, int monthlyProductCheckDays) { builder.AddInt(97, monthlyProductCheckDays, 0); }
  public static void AddWeaponLvUpCoefficient(FlatBufferBuilder builder, int weaponLvUpCoefficient) { builder.AddInt(98, weaponLvUpCoefficient, 0); }
  public static void AddShowRaidMyListCount(FlatBufferBuilder builder, int showRaidMyListCount) { builder.AddInt(99, showRaidMyListCount, 0); }
  public static void AddMaxLevelExpMasterCoinRatio(FlatBufferBuilder builder, int maxLevelExpMasterCoinRatio) { builder.AddInt(100, maxLevelExpMasterCoinRatio, 0); }
  public static void AddRaidEnterCostType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ParcelType raidEnterCostType) { builder.AddInt(101, (int)raidEnterCostType, 0); }
  public static void AddRaidEnterCostId(FlatBufferBuilder builder, long raidEnterCostId) { builder.AddLong(102, raidEnterCostId, 0); }
  public static void AddRaidTicketCost(FlatBufferBuilder builder, long raidTicketCost) { builder.AddLong(103, raidTicketCost, 0); }
  public static void AddTimeAttackDungeonScenarioId(FlatBufferBuilder builder, StringOffset timeAttackDungeonScenarioIdOffset) { builder.AddOffset(104, timeAttackDungeonScenarioIdOffset.Value, 0); }
  public static void AddTimeAttackDungoenPlayCountPerTicket(FlatBufferBuilder builder, int timeAttackDungoenPlayCountPerTicket) { builder.AddInt(105, timeAttackDungoenPlayCountPerTicket, 0); }
  public static void AddTimeAttackDungeonEnterCostType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ParcelType timeAttackDungeonEnterCostType) { builder.AddInt(106, (int)timeAttackDungeonEnterCostType, 0); }
  public static void AddTimeAttackDungeonEnterCostId(FlatBufferBuilder builder, long timeAttackDungeonEnterCostId) { builder.AddLong(107, timeAttackDungeonEnterCostId, 0); }
  public static void AddTimeAttackDungeonEnterCost(FlatBufferBuilder builder, long timeAttackDungeonEnterCost) { builder.AddLong(108, timeAttackDungeonEnterCost, 0); }
  public static void AddClanLeaderTransferLastLoginLimit(FlatBufferBuilder builder, long clanLeaderTransferLastLoginLimit) { builder.AddLong(109, clanLeaderTransferLastLoginLimit, 0); }
  public static void AddMonthlyProductRepurchasePopupLimit(FlatBufferBuilder builder, int monthlyProductRepurchasePopupLimit) { builder.AddInt(110, monthlyProductRepurchasePopupLimit, 0); }
  public static void AddCommonFavorItemTags(FlatBufferBuilder builder, VectorOffset commonFavorItemTagsOffset) { builder.AddOffset(111, commonFavorItemTagsOffset.Value, 0); }
  public static VectorOffset CreateCommonFavorItemTagsVector(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt((int)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateCommonFavorItemTagsVectorBlock(FlatBufferBuilder builder, SCHALE.Common.FlatData.Tag[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCommonFavorItemTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<SCHALE.Common.FlatData.Tag> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCommonFavorItemTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<SCHALE.Common.FlatData.Tag>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCommonFavorItemTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMaxApMasterCoinPerWeek(FlatBufferBuilder builder, long maxApMasterCoinPerWeek) { builder.AddLong(112, maxApMasterCoinPerWeek, 0); }
  public static void AddCraftOpenExpTier1(FlatBufferBuilder builder, long craftOpenExpTier1) { builder.AddLong(113, craftOpenExpTier1, 0); }
  public static void AddCraftOpenExpTier2(FlatBufferBuilder builder, long craftOpenExpTier2) { builder.AddLong(114, craftOpenExpTier2, 0); }
  public static void AddCraftOpenExpTier3(FlatBufferBuilder builder, long craftOpenExpTier3) { builder.AddLong(115, craftOpenExpTier3, 0); }
  public static void AddCharacterEquipmentGearSlot(FlatBufferBuilder builder, long characterEquipmentGearSlot) { builder.AddLong(116, characterEquipmentGearSlot, 0); }
  public static void AddBirthDayDDay(FlatBufferBuilder builder, int birthDayDDay) { builder.AddInt(117, birthDayDDay, 0); }
  public static void AddRecommendedFriendsLvDifferenceLimit(FlatBufferBuilder builder, int recommendedFriendsLvDifferenceLimit) { builder.AddInt(118, recommendedFriendsLvDifferenceLimit, 0); }
  public static void AddDDosDetectCount(FlatBufferBuilder builder, int dDosDetectCount) { builder.AddInt(119, dDosDetectCount, 0); }
  public static void AddDDosCheckIntervalInSeconds(FlatBufferBuilder builder, int dDosCheckIntervalInSeconds) { builder.AddInt(120, dDosCheckIntervalInSeconds, 0); }
  public static void AddMaxFriendsCount(FlatBufferBuilder builder, int maxFriendsCount) { builder.AddInt(121, maxFriendsCount, 0); }
  public static void AddMaxFriendsRequest(FlatBufferBuilder builder, int maxFriendsRequest) { builder.AddInt(122, maxFriendsRequest, 0); }
  public static void AddFriendsSearchRequestCount(FlatBufferBuilder builder, int friendsSearchRequestCount) { builder.AddInt(123, friendsSearchRequestCount, 0); }
  public static void AddFriendsMaxApplicant(FlatBufferBuilder builder, int friendsMaxApplicant) { builder.AddInt(124, friendsMaxApplicant, 0); }
  public static void AddIdCardDefaultCharacterId(FlatBufferBuilder builder, long idCardDefaultCharacterId) { builder.AddLong(125, idCardDefaultCharacterId, 0); }
  public static void AddIdCardDefaultBgId(FlatBufferBuilder builder, long idCardDefaultBgId) { builder.AddLong(126, idCardDefaultBgId, 0); }
  public static void AddWorldRaidGemEnterCost(FlatBufferBuilder builder, long worldRaidGemEnterCost) { builder.AddLong(127, worldRaidGemEnterCost, 0); }
  public static void AddWorldRaidGemEnterAmout(FlatBufferBuilder builder, long worldRaidGemEnterAmout) { builder.AddLong(128, worldRaidGemEnterAmout, 0); }
  public static void AddFriendIdCardCommentMaxLength(FlatBufferBuilder builder, long friendIdCardCommentMaxLength) { builder.AddLong(129, friendIdCardCommentMaxLength, 0); }
  public static void AddFormationPresetNumberOfEchelonTab(FlatBufferBuilder builder, int formationPresetNumberOfEchelonTab) { builder.AddInt(130, formationPresetNumberOfEchelonTab, 0); }
  public static void AddFormationPresetNumberOfEchelon(FlatBufferBuilder builder, int formationPresetNumberOfEchelon) { builder.AddInt(131, formationPresetNumberOfEchelon, 0); }
  public static void AddFormationPresetRecentNumberOfEchelon(FlatBufferBuilder builder, int formationPresetRecentNumberOfEchelon) { builder.AddInt(132, formationPresetRecentNumberOfEchelon, 0); }
  public static void AddFormationPresetEchelonTabTextLength(FlatBufferBuilder builder, int formationPresetEchelonTabTextLength) { builder.AddInt(133, formationPresetEchelonTabTextLength, 0); }
  public static void AddFormationPresetEchelonSlotTextLength(FlatBufferBuilder builder, int formationPresetEchelonSlotTextLength) { builder.AddInt(134, formationPresetEchelonSlotTextLength, 0); }
  public static void AddCharProfileRowIntervalKr(FlatBufferBuilder builder, int charProfileRowIntervalKr) { builder.AddInt(135, charProfileRowIntervalKr, 0); }
  public static void AddCharProfileRowIntervalJp(FlatBufferBuilder builder, int charProfileRowIntervalJp) { builder.AddInt(136, charProfileRowIntervalJp, 0); }
  public static void AddCharProfilePopupRowIntervalKr(FlatBufferBuilder builder, int charProfilePopupRowIntervalKr) { builder.AddInt(137, charProfilePopupRowIntervalKr, 0); }
  public static void AddCharProfilePopupRowIntervalJp(FlatBufferBuilder builder, int charProfilePopupRowIntervalJp) { builder.AddInt(138, charProfilePopupRowIntervalJp, 0); }
  public static void AddBeforehandGachaCount(FlatBufferBuilder builder, int beforehandGachaCount) { builder.AddInt(139, beforehandGachaCount, 0); }
  public static void AddBeforehandGachaGroupId(FlatBufferBuilder builder, int beforehandGachaGroupId) { builder.AddInt(140, beforehandGachaGroupId, 0); }
  public static void AddRenewalDisplayOrderDay(FlatBufferBuilder builder, int renewalDisplayOrderDay) { builder.AddInt(141, renewalDisplayOrderDay, 0); }
  public static void AddEmblemDefaultId(FlatBufferBuilder builder, long emblemDefaultId) { builder.AddLong(142, emblemDefaultId, 0); }
  public static void AddBirthdayMailStartDate(FlatBufferBuilder builder, StringOffset birthdayMailStartDateOffset) { builder.AddOffset(143, birthdayMailStartDateOffset.Value, 0); }
  public static void AddBirthdayMailRemainDate(FlatBufferBuilder builder, int birthdayMailRemainDate) { builder.AddInt(144, birthdayMailRemainDate, 0); }
  public static void AddBirthdayMailParcelType(FlatBufferBuilder builder, SCHALE.Common.FlatData.ParcelType birthdayMailParcelType) { builder.AddInt(145, (int)birthdayMailParcelType, 0); }
  public static void AddBirthdayMailParcelId(FlatBufferBuilder builder, long birthdayMailParcelId) { builder.AddLong(146, birthdayMailParcelId, 0); }
  public static void AddBirthdayMailParcelAmount(FlatBufferBuilder builder, int birthdayMailParcelAmount) { builder.AddInt(147, birthdayMailParcelAmount, 0); }
  public static void AddClearDeckAverageDeckCount(FlatBufferBuilder builder, int clearDeckAverageDeckCount) { builder.AddInt(148, clearDeckAverageDeckCount, 0); }
  public static void AddClearDeckWorldRaidSaveConditionCoefficient(FlatBufferBuilder builder, int clearDeckWorldRaidSaveConditionCoefficient) { builder.AddInt(149, clearDeckWorldRaidSaveConditionCoefficient, 0); }
  public static void AddClearDeckShowCount(FlatBufferBuilder builder, int clearDeckShowCount) { builder.AddInt(150, clearDeckShowCount, 0); }
  public static void AddCharacterMaxLevel(FlatBufferBuilder builder, int characterMaxLevel) { builder.AddInt(151, characterMaxLevel, 0); }
  public static void AddPotentialBonusStatMaxLevelMaxHP(FlatBufferBuilder builder, int potentialBonusStatMaxLevelMaxHP) { builder.AddInt(152, potentialBonusStatMaxLevelMaxHP, 0); }
  public static void AddPotentialBonusStatMaxLevelAttackPower(FlatBufferBuilder builder, int potentialBonusStatMaxLevelAttackPower) { builder.AddInt(153, potentialBonusStatMaxLevelAttackPower, 0); }
  public static void AddPotentialBonusStatMaxLevelHealPower(FlatBufferBuilder builder, int potentialBonusStatMaxLevelHealPower) { builder.AddInt(154, potentialBonusStatMaxLevelHealPower, 0); }
  public static void AddPotentialOpenConditionCharacterLevel(FlatBufferBuilder builder, int potentialOpenConditionCharacterLevel) { builder.AddInt(155, potentialOpenConditionCharacterLevel, 0); }
  public static Offset<SCHALE.Common.FlatData.ConstCommonExcel> EndConstCommonExcel(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SCHALE.Common.FlatData.ConstCommonExcel>(o);
  }
}


static public class ConstCommonExcelVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*CampaignMainStageMaxRank*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*CampaignMainStageBestRecord*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*HardAdventurePlayCountRecoverDailyNumber*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 10 /*HardStageCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*TacticRankClearTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*BaseTimeScale*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 16 /*GachaPercentage*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*AcademyFavorZoneId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 20 /*CafePresetSlotCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 22 /*CafeMonologueIntervalMillisec*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 24 /*CafeMonologueDefaultDuration*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 26 /*CafeBubbleIdleDurationMilliSec*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 28 /*FindGiftTimeLimit*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*CafeAutoChargePeriodInMsc*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*CafeProductionDecimalPosition*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*CafeSetGroupApplyCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 36 /*WeekDungeonFindGiftRewardLimitCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 38 /*StageFailedCurrencyRefundRate*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 40 /*EnterDeposit*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 42 /*AccountMaxLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 44 /*MainSquadExpBonus*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 46 /*SupportSquadExpBonus*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 48 /*AccountExpRatio*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 50 /*MissionToastLifeTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 52 /*ExpItemInsertLimit*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 54 /*ExpItemInsertAccelTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 56 /*CharacterLvUpCoefficient*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 58 /*EquipmentLvUpCoefficient*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 60 /*ExpEquipInsertLimit*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 62 /*EquipLvUpCoefficient*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 64 /*NicknameLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 66 /*CraftDuration*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 68 /*CraftLimitTime*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 70 /*ShiftingCraftDuration*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 72 /*ShiftingCraftTicketConsumeAmount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 74 /*ShiftingCraftSlotMaxCapacity*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 76 /*CraftTicketItemUniqueId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 78 /*CraftTicketConsumeAmount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 80 /*AcademyEnterCostType*/, 4 /*SCHALE.Common.FlatData.ParcelType*/, 4, false)
      && verifier.VerifyField(tablePos, 82 /*AcademyEnterCostId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 84 /*AcademyTicketCost*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 86 /*MassangerMessageExpireDay*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 88 /*CraftLeafNodeGenerateLv1Count*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 90 /*CraftLeafNodeGenerateLv2Count*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 92 /*TutorialGachaShopId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 94 /*BeforehandGachaShopId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 96 /*TutorialGachaGoodsId*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 98 /*EquipmentSlotOpenLevel*/, 4 /*int*/, false)
      && verifier.VerifyField(tablePos, 100 /*ScenarioAutoDelayMillisec*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 102 /*JoinOrCreateClanCoolTimeFromHour*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 104 /*ClanMaxMember*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 106 /*ClanSearchResultCount*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 108 /*ClanMaxApplicant*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 110 /*ClanRejoinCoolTimeFromSecond*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 112 /*ClanWordBalloonMaxCharacter*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 114 /*CallNameRenameCoolTimeFromHour*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 116 /*CallNameMinimumLength*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 118 /*CallNameMaximumLength*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 120 /*LobbyToScreenModeWaitTime*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 122 /*ScreenshotToLobbyButtonHideDelay*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 124 /*PrologueScenarioID01*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 126 /*PrologueScenarioID02*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 128 /*TutorialHardStage11*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 130 /*TutorialSpeedButtonStage*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 132 /*TutorialCharacterDefaultCount*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 134 /*TutorialShopCategoryType*/, 4 /*SCHALE.Common.FlatData.ShopCategoryType*/, 4, false)
      && verifier.VerifyField(tablePos, 136 /*AdventureStrategyPlayTimeLimitInSeconds*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 138 /*WeekDungoenTacticPlayTimeLimitInSeconds*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 140 /*RaidTacticPlayTimeLimitInSeconds*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 142 /*RaidOpponentListAmount*/, 8 /*long*/, 8, false)
      && verifier.VerifyVectorOfData(tablePos, 144 /*CraftBaseGoldRequired*/, 8 /*long*/, false)
      && verifier.VerifyField(tablePos, 146 /*PostExpiredDayAttendance*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 148 /*PostExpiredDayInventoryOverflow*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 150 /*PostExpiredDayGameManager*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 152 /*UILabelCharacterWrap*/, false)
      && verifier.VerifyField(tablePos, 154 /*RequestTimeOut*/, 4 /*float*/, 4, false)
      && verifier.VerifyField(tablePos, 156 /*MailStorageSoftCap*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 158 /*MailStorageHardCap*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 160 /*ClearDeckStorageSize*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 162 /*ClearDeckNoStarViewCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 164 /*ClearDeck1StarViewCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 166 /*ClearDeck2StarViewCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 168 /*ClearDeck3StarViewCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 170 /*ExSkillLevelMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 172 /*PublicSkillLevelMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 174 /*PassiveSkillLevelMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 176 /*ExtraPassiveSkillLevelMax*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 178 /*AccountCommentMaxLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 180 /*ShowFurnitureTag*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 182 /*CafeSummonCoolTimeFromHour*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 184 /*LimitedStageDailyClearCount*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 186 /*LimitedStageEntryTimeLimit*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 188 /*LimitedStageEntryTimeBuffer*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 190 /*LimitedStagePointAmount*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 192 /*LimitedStagePointPerApMin*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 194 /*LimitedStagePointPerApMax*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 196 /*AccountLinkReward*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 198 /*MonthlyProductCheckDays*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 200 /*WeaponLvUpCoefficient*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 202 /*ShowRaidMyListCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 204 /*MaxLevelExpMasterCoinRatio*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 206 /*RaidEnterCostType*/, 4 /*SCHALE.Common.FlatData.ParcelType*/, 4, false)
      && verifier.VerifyField(tablePos, 208 /*RaidEnterCostId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 210 /*RaidTicketCost*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 212 /*TimeAttackDungeonScenarioId*/, false)
      && verifier.VerifyField(tablePos, 214 /*TimeAttackDungoenPlayCountPerTicket*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 216 /*TimeAttackDungeonEnterCostType*/, 4 /*SCHALE.Common.FlatData.ParcelType*/, 4, false)
      && verifier.VerifyField(tablePos, 218 /*TimeAttackDungeonEnterCostId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 220 /*TimeAttackDungeonEnterCost*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 222 /*ClanLeaderTransferLastLoginLimit*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 224 /*MonthlyProductRepurchasePopupLimit*/, 4 /*int*/, 4, false)
      && verifier.VerifyVectorOfData(tablePos, 226 /*CommonFavorItemTags*/, 4 /*SCHALE.Common.FlatData.Tag*/, false)
      && verifier.VerifyField(tablePos, 228 /*MaxApMasterCoinPerWeek*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 230 /*CraftOpenExpTier1*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 232 /*CraftOpenExpTier2*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 234 /*CraftOpenExpTier3*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 236 /*CharacterEquipmentGearSlot*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 238 /*BirthDayDDay*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 240 /*RecommendedFriendsLvDifferenceLimit*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 242 /*DDosDetectCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 244 /*DDosCheckIntervalInSeconds*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 246 /*MaxFriendsCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 248 /*MaxFriendsRequest*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 250 /*FriendsSearchRequestCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 252 /*FriendsMaxApplicant*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 254 /*IdCardDefaultCharacterId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 256 /*IdCardDefaultBgId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 258 /*WorldRaidGemEnterCost*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 260 /*WorldRaidGemEnterAmout*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 262 /*FriendIdCardCommentMaxLength*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 264 /*FormationPresetNumberOfEchelonTab*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 266 /*FormationPresetNumberOfEchelon*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 268 /*FormationPresetRecentNumberOfEchelon*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 270 /*FormationPresetEchelonTabTextLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 272 /*FormationPresetEchelonSlotTextLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 274 /*CharProfileRowIntervalKr*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 276 /*CharProfileRowIntervalJp*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 278 /*CharProfilePopupRowIntervalKr*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 280 /*CharProfilePopupRowIntervalJp*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 282 /*BeforehandGachaCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 284 /*BeforehandGachaGroupId*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 286 /*RenewalDisplayOrderDay*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 288 /*EmblemDefaultId*/, 8 /*long*/, 8, false)
      && verifier.VerifyString(tablePos, 290 /*BirthdayMailStartDate*/, false)
      && verifier.VerifyField(tablePos, 292 /*BirthdayMailRemainDate*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 294 /*BirthdayMailParcelType*/, 4 /*SCHALE.Common.FlatData.ParcelType*/, 4, false)
      && verifier.VerifyField(tablePos, 296 /*BirthdayMailParcelId*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 298 /*BirthdayMailParcelAmount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 300 /*ClearDeckAverageDeckCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 302 /*ClearDeckWorldRaidSaveConditionCoefficient*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 304 /*ClearDeckShowCount*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 306 /*CharacterMaxLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 308 /*PotentialBonusStatMaxLevelMaxHP*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 310 /*PotentialBonusStatMaxLevelAttackPower*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 312 /*PotentialBonusStatMaxLevelHealPower*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 314 /*PotentialOpenConditionCharacterLevel*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
